apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "onedev.fullname" . }}
  labels:
    {{- include "onedev.labels" . | nindent 4 }}
    tier: onedev
spec:
  replicas: 1 # only allow one replicas as OneDev doesn't support clustering
  selector:
    matchLabels:
      {{- include "onedev.selectorLabels" . | nindent 6 }}
      tier: onedev
  strategy:
    type: Recreate
  template:
    metadata:
      name: {{ include "onedev.fullname" . }}
      labels:
        {{- include "onedev.selectorLabels" . | nindent 8 }}
        tier: onedev
    spec:
      serviceAccountName: {{ include "onedev.fullname" . }}
      {{- if .Values.nodeSelector.onedev }}
      nodeSelector: {{ toYaml .Values.nodeSelector.onedev | nindent 8 }}
      {{- end }}
      containers:
        - name: onedev
          {{- if .Values.maintenance }}
          command: ["/root/bin/idle.sh"]
          {{- end }}
          resources:
            requests:
              memory: {{ .Values.resources.onedev.memory }}
          volumeMounts:
          - name: onedev
            mountPath: "/opt/onedev"
          {{- if .Values.trustCerts }}
          - name: trust-certs
            mountPath: "/opt/onedev/conf/trust-certs"
          {{- end }}
          image: "1dev/server:{{ .Chart.AppVersion }}"
          ports:
            - containerPort: 6610
            - containerPort: 6611
          env:
          - name: k8s_service
            value: {{ include "onedev.fullname" . }}
          {{- if .Values.ingress.host }}
          - name: ingress_host
            value: {{ .Values.ingress.host }}
          {{- end }}
          {{- if .Values.initial.user }}
          - name: initial_user
            value: {{ .Values.initial.user }}
          {{- end }}
          {{- if .Values.initial.password }}
          - name: initial_password
            value: {{ .Values.initial.password }}
          {{- end }}
          {{- if .Values.initial.email }}
          - name: initial_email
            value: {{ .Values.initial.email }}
          {{- end }}
          {{- if .Values.initial.serverUrl }}
          - name: initial_server_url
            value: {{ .Values.initial.serverUrl }}
          {{- end }}
          {{- if .Values.initial.sshRootUrl }}
          - name: initial_ssh_root_url
            value: {{ .Values.initial.sshRootUrl }}
          {{- end }}
          - name: ingress_tls
            value: "{{ .Values.ingress.tls }}"
          - name: hibernate_dialect
            value: org.hibernate.dialect.MySQL5InnoDBDialect
          - name: hibernate_connection_driver_class
            value: com.mysql.cj.jdbc.Driver
          - name: hibernate_connection_url
            value: jdbc:mysql://{{ include "onedev.fullname" . }}-mysql:3306/onedev?serverTimezone=UTC&allowPublicKeyRetrieval=true&useSSL=false
          - name: hibernate_connection_username
            value: root
          - name: hibernate_connection_password
            valueFrom:
              secretKeyRef:
                name: {{ include "onedev.fullname" . }}-mysql
                key: password
          - name: hibernate_hikari_maximumPoolSize
            value: "25"
      initContainers:
        - name: init
          image: busybox
          command: ["sh", "-c", "until nslookup {{ include "onedev.fullname" . }}-mysql.{{.Release.Namespace}}.svc.cluster.local; do echo waiting for mysql; sleep 2; done;"]
      volumes:
        - name: onedev
          persistentVolumeClaim:
            claimName: {{ include "onedev.fullname" . }}
        {{- if .Values.trustCerts }}
        - name: trust-certs
          configMap:
            name: {{ include "onedev.fullname" . }}-trust-certs
        {{- end }}


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "onedev.fullname" . }}-mysql
  labels:
    {{- include "onedev.labels" . | nindent 4 }}
    tier: mysql
spec:
  selector:
    matchLabels:
      {{- include "onedev.selectorLabels" . | nindent 6 }}
      tier: mysql 
  strategy:
    type: Recreate
  template:
    metadata:
      name: {{ include "onedev.fullname" . }}-mysql
      labels:
        {{- include "onedev.selectorLabels" . | nindent 8 }}
        tier: mysql
    spec:
      {{- if .Values.nodeSelector.onedev }}
      nodeSelector: {{ toYaml .Values.nodeSelector.mysql | nindent 8 }}
      {{- end }}
      containers:
        - name: mysql
          image: mysql:5.7
          args:
            - "--character-set-server=utf8mb4"
            - "--collation-server=utf8mb4_unicode_ci"
            - "--ignore-db-dir=lost+found"
          env:
            - name: MYSQL_DATABASE
              value: onedev
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{include "onedev.fullname" . }}-mysql
                  key: password
          ports:
            - containerPort: 3306
          resources:
            requests:
              memory: {{ .Values.resources.mysql.memory }}
          volumeMounts:
            - name: mysql
              mountPath: /var/lib/mysql
          readinessProbe:
            exec:
              command:
                - bash
                - "-c"
                - |
                  mysql -uroot -p$MYSQL_ROOT_PASSWORD -e 'SELECT 1'
            initialDelaySeconds: 5
            periodSeconds: 2
            timeoutSeconds: 1
      volumes:
        - name: mysql
          persistentVolumeClaim:
            claimName: {{ include "onedev.fullname" . }}-mysql
