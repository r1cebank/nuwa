# Create certificate
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: vikunja-cert
  namespace: {{ .Release.Namespace }}
spec:
  secretName: vikunja-tls
  issuerRef:
    name: {{ .Values.ingress.certmanager.tlsIssuer }}
    kind: ClusterIssuer
  commonName: {{ .Values.ingress.host }}
  dnsNames:
  - {{ .Values.ingress.host }}
  privateKey:
    algorithm: ECDSA
---
# IngressRoute https
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: vikunja-https
  namespace: {{ .Release.Namespace }}
  annotations:
    {{- if .Values.ingress.homepage.enabled -}}
      gethomepage.dev/enabled: "true"
      gethomepage.dev/name: {{ .Values.ingress.homepage.name }}
      gethomepage.dev/description: {{ .Values.ingress.homepage.description }}
      gethomepage.dev/group: {{ .Values.ingress.homepage.group }}
      gethomepage.dev/icon: {{ .Values.ingress.homepage.icon }}
      gethomepage.dev/href: "https://{{ .Values.ingress.host }}"
    {{- end }}
spec:
  entryPoints:
    - websecure
  routes:
  - kind: Rule
    match: Host(`{{ .Values.ingress.host }}`) && (PathPrefix(`/api/v1`) || PathPrefix(`/dav`) || PathPrefix(`/.well-known`))
    services:
    - name: {{ .Release.Name }}-api
      port: 80
      namespace: {{ .Release.Namespace }}
  - kind: Rule
    match: Host(`{{ .Values.ingress.host }}`)
    services:
    - name: {{ .Release.Name }}-frontend
      port: 80
      namespace: {{ .Release.Namespace }}
  tls:
    secretName: vikunja-tls