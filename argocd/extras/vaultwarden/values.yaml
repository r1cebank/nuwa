########################
# vaultwarden subchart
########################
vaultwarden:
  image:
    pullPolicy: IfNotPresent
    repository: vaultwarden/server
    tag: "1.29.0-alpine"
  ingress:
    enabled: true
    className: traefik
    host: vaultwarden.owo.ac
    annotations:
      # HTTPS as entry point
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      # Enable TLS
      traefik.ingress.kubernetes.io/router.tls: "true"
      # Enable cert-manager to create automatically the SSL certificate and store in Secret
      cert-manager.io/cluster-issuer: letsencrypt-prod-issuer
      cert-manager.io/common-name: vaultwarden.owo.ac

      gethomepage.dev/enabled: "true"
      gethomepage.dev/name: "Vaultwarden"
      gethomepage.dev/description: "Bitwarden compatible server written in Rust"
      gethomepage.dev/group: "Tools"
      gethomepage.dev/icon: "vaultwarden.png"
      gethomepage.dev/href: "https://vaultwarden.owo.ac"
    tls:
      - hosts:
          - vaultwarden.owo.ac
        secretName: vaultwarden-tls
  vaultwarden:
    domain: https://vaultwarden.owo.ac
    admin:
      enabled: true
      existingSecret: vaultwarden-secret
    verifySignup: true
    requireEmail: true
    signupDomains: "miku.cx,owo.ac"
    yubico:
      enabled: true
      existingSecret: vaultwarden-secret
    smtp:
      enabled: true
      host: "in-v3.mailjet.com"
      from: "noreply@miku.cx"
      port: 587
      existingSecret: vaultwarden-secret
  database:
    type: postgresql
    existingSecret: vaultwarden-secret

########################
# postgresql subchart
########################
postgresql:
  auth:
    username: vaultwarden
    database: vaultwarden
    existingSecret: vaultwarden-secret
  persistence:
    storageClass: longhorn
    size: 10Gi