{{- if .Values.ingress.enabled }}
---
# Create certificate
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: traefik-cert
  namespace: {{ .Release.Namespace }}
spec:
  secretName: traefik-secret
  issuerRef:
    name: {{ .Values.ingress.certmanager.tlsIssuer }}
    kind: ClusterIssuer
  commonName: {{ .Values.ingress.host }}
  dnsNames:
  - {{ .Values.ingress.host }}
  privateKey:
    algorithm: ECDSA
---
# IngressRoute https
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: traefik-dashboard
  namespace: {{ .Release.Namespace }}
  annotations:
  {{- if .Values.ingress.homepage.enabled -}}
    gethomepage.dev/enabled: "true"
    gethomepage.dev/name: {{ .Values.ingress.homepage.name }}
    gethomepage.dev/description: {{ .Values.ingress.homepage.description }}
    gethomepage.dev/group: {{ .Values.ingress.homepage.group }}
    gethomepage.dev/icon: {{ .Values.ingress.homepage.icon }}
    gethomepage.dev/href: "https://traefik.owo.ac/dashboard/"
  {{- end }}
spec:
  entryPoints:
    - websecure
  routes:
  - kind: Rule
    match: Host(`{{ .Values.ingress.host }}`) && (PathPrefix(`/dashboard`) || PathPrefix(`/api`))
    services:
    - kind: TraefikService
      name: api@internal
{{- if .Values.ingress.auth.enable }}
    middlewares:
      - name: {{ .Values.ingress.auth.middlewareName }}
        namespace: {{ .Values.ingress.auth.middlewareNamespace }}
{{- end }}
  tls:
    secretName: traefik-secret
{{- end }}