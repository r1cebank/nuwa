########################
# postgresql subchart
########################
postgresql:
  primary:
    podAnnotations:
      linkerd.io/inject: enabled
  auth:
    username: authelia
    database: authelia
    existingSecret: authelia-secret
  persistence:
    storageClass: longhorn
    size: 10Gi
########################
# redis subchart
########################
redis:
  architecture: standalone
  primary:
    podAnnotations:
      linkerd.io/inject: enabled
  auth:
    enabled: true
    existingSecret: authelia-secret
    existingSecretPasswordKey: REDIS_PASSWORD

########################
# authelia subchart
########################
authelia:
  domain: owo.ac
  ingress:
    enabled: true
    annotations:
      # HTTPS as entry point
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      # Enable TLS
      traefik.ingress.kubernetes.io/router.tls: "true"
      # Enable cert-manager to create automatically the SSL certificate and store in Secret
      cert-manager.io/cluster-issuer: letsencrypt-staging-issuer
      cert-manager.io/common-name: auth.owo.ac
    subdomain: auth
    tls:
      enabled: true
      secret: authelia-tls
    
  # Authelia configuration
  configMap:
    theme: auto

    ## Default redirection URL
    ##
    ## If user tries to authenticate without any referer, Authelia does not know where to redirect the user to at the end
    ## of the authentication process. This parameter allows you to specify the default redirection URL Authelia will use
    ## in such a case.
    ##
    ## Note: this parameter is optional. If not provided, user won't be redirected upon successful authentication.
    ## Default is https://www.<domain> (value at the top of the values.yaml).
    # default_redirection_url: https://example.com

    ## Set the default 2FA method for new users and for when a user has a preferred method configured that has been
    ## disabled. This setting must be a method that is enabled.
    ## Options are totp, webauthn, mobile_push.
    default_2fa_method: "webauthn"

    ##
    ## Authentication Backend Provider Configuration
    ##
    ## Used for verifying user passwords and retrieve information such as email address and groups users belong to.
    ##
    ## The available providers are: `file`, `ldap`. You must use one and only one of these providers.
    authentication_backend:
      # In this case Authelia is "stateless" and user data is imported from a config file, so password resets are disabled
      password_reset:
        disable: false
      # Disable LDAP backend and use file instead
      ldap:
        enabled: true
        implementation: custom
        url: ldap://openldap.openldap.svc.cluster.local
        base_dn: DC=owo,DC=ac
        additional_users_dn: OU=users
        additional_groups_dn: OU=groups
        user: CN=admin,DC=owo,DC=ac
        users_filter: "(&(|({username_attribute}={input})({mail_attribute}={input}))(objectClass=person))"
        groups_filter: "(&(uniquemember={dn})(objectclass=groupOfUniqueNames))"
      file:
        enabled: false
      
    # Identity providers, specifically OIDC
    identity_providers:
      oidc:
        enabled: false
    access_control:
      default_policy: deny
      networks:
        - name: private
          networks:
            - 10.0.0.0/8
        - name: tailscale
          networks:
            - 100.64.0.0/10
    
    ##
    ## Session Provider Configuration
    ##
    ## The session cookies identify the user once logged in.
    ## The available providers are: `memory`, `redis`. Memory is the provider unless redis is defined.
    session:
      redis:
        enabled: true
        host: authelia-redis-master.authelia.svc.cluster.local
        port: 6379
    
    ##
    ## Storage Provider Configuration
    ##
    ## The available providers are: `local`, `mysql`, `postgres`. You must use one and only one of these providers.
    storage:
      postgres:
        enabled: true
        host: authelia-postgresql.authelia.svc.cluster.local
        port: 5432
        database: authelia
        schema: public
        username: authelia
        timeout: 5s
    
    ##
    ## Notification Provider
    ##
    ##
    ## Notifications are sent to users when they require a password reset, a u2f registration or a TOTP registration.
    ## The available providers are: filesystem, smtp. You must use one and only one of these providers.
    notifier:
      smtp:
        enabled: true
        host: in-v3.mailjet.com
        port: 587
        timeout: 5s
        username: d86fa73b53b9e7b67d3f8831be6329aa
        sender: noreply@miku.cx
        ## Subject configuration of the emails sent.
        ## {title} is replaced by the text from the notifier
        subject: "[Authelia] {title}"
        ## This address is used during the startup check to verify the email configuration is correct.
        ## It's not important what it is except if your email server only allows local delivery.
        startup_check_address: noreply@miku.cx

  ##
  ## Authelia Secret Generator.
  ##
  ## If both the values and existingSecret are not defined, this chart randomly generates a new secret on each
  ## install. It is recommended that you use something like sealed-secrets (https://github.com/bitnami-labs/sealed-secrets)
  ## and use the existingSecrets. All secrets can be stored in a single k8s secret if desired using the key option.
  ##
  secret:
    existingSecret: authelia-secret

  ##
  ## Authelia Persistence Configuration.
  ##
  ## Useful in scenarios where you need persistent storage.
  ## Auth Provider Use Case: file; we recommend you use the ldap provider instead.
  ## Storage Provider Use Case: local; we recommend you use the mysql/mariadb or postgres provider instead.
  ## Configuration Use Case: when you want to manually configure the configuration entirely (set configMap.enabled = false).
  ##
  persistence:
    enabled: false
