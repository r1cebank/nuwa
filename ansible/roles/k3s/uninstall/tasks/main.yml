---
- name: Check if k3s is installed
  ansible.builtin.stat:
    path: /usr/local/bin/k3s
  register: k3s_installed

- name: Kill all k3s resources
  ansible.builtin.command: /usr/local/bin/k3s-killall.sh
  when: k3s_installed.stat.exists
  register: output
  changed_when: output.rc != 0

- name: Uninstall k3s
  ansible.builtin.command: /usr/local/bin/k3s-uninstall.sh
  when:
    - k3s_installed.stat.exists
    - inventory_hostname in groups["k3s_master"]
  register: output
  changed_when: output.rc != 0

- name: Uninstall k3s agent
  ansible.builtin.command: /usr/local/bin/k3s-agent-uninstall.sh
  when:
    - k3s_installed.stat.exists
    - inventory_hostname in groups["k3s_worker"]
  register: output
  changed_when: output.rc != 0

- name: Remove rancher directory
  become: true
  ansible.builtin.file:
    state: absent
    path: "{{ k3s_config_directory }}"
  register: output
  changed_when: output.diff is defined

- name: Locating all files in files longhorn dir
  ansible.builtin.find:
    path: "{{ longhorn_disk_nvme }}"
  register: longhorn_files
  ignore_errors: true
  when: inventory_hostname in groups["k3s_worker"]

- name: Locating all directories in files longhorn dir
  ansible.builtin.find:
    paths: "{{ longhorn_disk_nvme }}"
    hidden: true
    recurse: true
    file_type: directory
  register: longhorn_dirs
  when: inventory_hostname in groups["k3s_worker"]

- name: Removing all files previously found in files dir
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: absent
  with_items: >
      {{
        longhorn_files.files
        + longhorn_dirs.files
      }}
  no_log: true
  ignore_errors: true
  when: inventory_hostname in groups["k3s_worker"]
