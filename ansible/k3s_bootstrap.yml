---

- name: Bootstrap Cluster
  hosts: k3s_master[0]
  gather_facts: true
  environment:
    K8S_AUTH_KUBECONFIG: /etc/rancher/k3s/k3s.yaml
  pre_tasks:
    - name: Include vault variables
      ansible.builtin.include_vars: "vars/vault.yml"
    - name: Include k3s variables
      ansible.builtin.include_vars: "vars/k3s.yml"
    - name: Include hashicorp_vault variables
      ansible.builtin.include_vars: "vars/hashicorp_vault.yml"
    - name: Ensure PIP is installed.
      ansible.builtin.package:
        name:
          - python3-pip
          - python3-setuptools
        state: present
      become: true
    - name: Ensure kubernetes and vault Python library is installed.
      ansible.builtin.pip:
        name:
          - kubernetes
          - hvac
        state: present
      become: true
    - name: Intall Helm Plugin
      kubernetes.core.helm_plugin:
        plugin_path: "https://github.com/databus23/helm-diff"
        state: present
  tasks:
    # - name: Create namespaces.
    #   kubernetes.core.k8s:
    #     name: "{{ item }}"
    #     api_version: v1
    #     kind: Namespace
    #     state: present
    #   with_items:
    #     - "argocd"
    #     - "vault"
    # - name: Configure Vault integration
    #   ansible.builtin.include_tasks: tasks/configure_vault_integration.yml

    - name: Copy argocd chart files
      ansible.builtin.copy:
        src: "../argocd/{{ item }}"
        dest: /tmp/charts
      with_items:
        - "bootstrap/argocd"

    - name: Update argo-cd helm dependency.
      ansible.builtin.command:
        cmd: "helm dependency update /tmp/charts/argocd"

    - name: Deploy Argo CD Helm chart.
      ansible.builtin.shell: |
        set -o pipefail
        helm template \
        --dependency-update \
        --include-crds \
        --namespace argocd \
        argocd /tmp/charts/argocd \
        | kubectl apply -n argocd -f -
      args:
        executable: /bin/bash

    - name: Wait for CRDs to be ready
      ansible.builtin.command:
        cmd: "kubectl wait --for condition=Established crd/applications.argoproj.io crd/applicationsets.argoproj.io --timeout=600s"
      changed_when: false

    # - name: Deploy root application
    #   kubernetes.core.k8s:
    #     definition: "{{ lookup('template', 'templates/' + item) }}"
    #     state: present
    #   with_items:
    #     - argocd_root_app.yml.j2

    # - name: Recursively remove tmp directory
    #   ansible.builtin.file:
    #     path: /tmp/charts
    #     state: absent
