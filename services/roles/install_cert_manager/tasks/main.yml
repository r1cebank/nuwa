---

- name: Add jetstack chart repo
  kubernetes.core.helm_repository:
    name: jetstack
    repo_url: "https://charts.jetstack.io"

- name: Install cert-manager crds
  ansible.builtin.command: "kubectl apply --validate=false -f {{ cert_manager_crds_url }}"
  register: output
  changed_when: output.rc != 0

- name: Deploy cert-manager chart
  become: true
  kubernetes.core.helm:
    name: cert-manager
    chart_version: "{{ cert_manager_version }}"
    release_namespace: cert-manager
    chart_ref: jetstack/cert-manager
    create_namespace: true
    update_repo_cache: true
    wait: true
    kubeconfig: /etc/rancher/k3s/k3s.yaml

- name: Create cloudflare apikey secret
  become: true
  kubernetes.core.k8s:
    state: present
    kubeconfig: /etc/rancher/k3s/k3s.yaml
    namespace: cert-manager
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: cloudflare-api-key-secret
      type: Opaque
      stringData:
        api-key: "{{ cloudflare_api_token }}"

- name: Create a letsencrypt staging issuer
  become: true
  kubernetes.core.k8s:
    state: present
    kubeconfig: /etc/rancher/k3s/k3s.yaml
    namespace: cert-manager
    definition:
      apiVersion: cert-manager.io/v1
      kind: Issuer
      metadata:
        name: "{{ cert_manager_issuer_staging }}"
      spec:
        acme:
          server: "{{ acme_staging_url }}"
          email: "{{ acme_email }}"
          privateKeySecretRef:
            name: "{{ cert_manager_issuer_staging }}"
          solvers:
            - dns01:
              cloudflare:
                email: "{{ cloudflare_email }}"
                apiKeySecretRef:
                  name: cloudflare-api-key-secret
                  key: api-key

- name: Create a letsencrypt prod issuer
  become: true
  kubernetes.core.k8s:
    state: present
    kubeconfig: /etc/rancher/k3s/k3s.yaml
    namespace: cert-manager
    definition:
      apiVersion: cert-manager.io/v1
      kind: Issuer
      metadata:
        name: "{{ cert_manager_issuer_prod }}"
      spec:
        acme:
          server: "{{ acme_prod_url }}"
          email: "{{ acme_email }}"
          privateKeySecretRef:
            name: "{{ cert_manager_issuer_prod }}"
          solvers:
            - dns01:
              cloudflare:
                email: "{{ cloudflare_email }}"
                apiKeySecretRef:
                  name: cloudflare-api-key-secret
                  key: api-key
