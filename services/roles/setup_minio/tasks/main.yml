---

- name: Install pip3
  ansible.builtin.apt:
    name: python3-pip
    update_cache: true
    state: present

- name: Install pre-requisites
  ansible.builtin.pip:
    name:
      - boto3
      - botocore

- name: Ensure group "minio-user" exists
  ansible.builtin.group:
    name: minio-user
    state: present

- name: Add the user "minio-user" to primary group of 'minio-user'
  ansible.builtin.user:
    name: minio-user
    group: minio-user
    create_home: false

- name: Create minio config
  become: true
  ansible.builtin.copy:
    dest: /etc/default/minio
    owner: minio-user
    group: minio-user
    mode: '0644'
    content: |
      MINIO_VOLUMES="{{ minio_nfs_mount_dest }}"
      MINIO_OPTS="--console-address :9001"
      MINIO_ROOT_USER="{{ minio_root_user }}"
      MINIO_ROOT_PASSWORD="{{ minio_root_password }}"

- name: Install minio
  ansible.builtin.apt:
    deb: "{{ minio_dpkg }}"
    state: present

- name: Remove user in systemd file
  ansible.builtin.lineinfile:
    path: /etc/systemd/system/minio.service
    search_string: "User=minio-user"
    state: absent

- name: Remove group in systemd file
  ansible.builtin.lineinfile:
    path: /etc/systemd/system/minio.service
    search_string: "Group=minio-user"
    state: absent

- name: Start minio
  ansible.builtin.systemd:
    state: started
    name: minio
    daemon_reload: true

- name: Create minio bucket
  amazon.aws.s3_bucket:
    name: "{{ velero_backup_bucket }}"
    endpoint_url: "http://{{ minio_host_ip }}:9000"
    validate_certs: false
    access_key: "{{ minio_root_user }}"
    secret_key: "{{ minio_root_password }}"
  when: not restore
