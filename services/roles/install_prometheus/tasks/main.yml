---
- name: Add prometheus chart repo
  kubernetes.core.helm_repository:
    name: prometheus-community
    repo_url: "{{ prometheus_chart_repo }}"

- name: Deploy prometheus chart to namespace
  become: true
  kubernetes.core.helm:
    name: kube-prometheus-stack
    release_namespace: monitoring
    chart_ref: prometheus-community/kube-prometheus-stack
    create_namespace: true
    update_repo_cache: true
    kubeconfig: /etc/rancher/k3s/k3s.yaml
    wait: true
    values:
      prometheusOperator:
        serviceMonitor:
          relabelings:
          - sourceLabels:
            - __address__
            action: replace
            targetLabel: job
            replacement: prometheus-operator
        kubeletService:
          enabled: false
      alertmanager:
        alertmanagerSpec:
          externalUrl: "https://{{ monitoring_host }}/alertmanager/"
          routePrefix: /
          storage:
            volumeClaimTemplate:
              spec:
                storageClassName: "{{ k3s_storage_class }}"
                accessModes: ["ReadWriteOnce"]
                resources:
                  requests:
                    storage: "{{ alertmanager_storage_size }}"
        serviceMonitor:
          relabelings:
            - sourceLabels:
              - __address__
              action: replace
              targetLabel: job
              replacement: alertmanager
      prometheus:
        prometheusSpec:
          externalUrl: "https://{{ monitoring_host }}/prometheus/"
          routePrefix: /
          resources:
            requests:
              memory: 1Gi
            limits:
              memory: 1Gi
          storageSpec:
            volumeClaimTemplate:
              spec:
                storageClassName: "{{ k3s_storage_class }}"
                accessModes: ["ReadWriteOnce"]
                resources:
                  requests:
                    storage: "{{ prometheus_storage_size }}"
        serviceMonitor:
          relabelings:
            - sourceLabels:
              - __address__
              action: replace
              targetLabel: job
              replacement: prometheus
      grafana:
        grafana.ini:
          server:
            domain: "{{ monitoring_host }}"
            root_url: "%(protocol)s://%(domain)s:%(http_port)s/grafana/"
            serve_from_sub_path: true
        adminPassword: "{{ grafana_admin_password }}"
        plugins:
          - grafana-piechart-panel
        serviceMonitor:
          labels:
            release: kube-prometheus-stack
          relabelings:
            - sourceLabels:
              - __address__
              action: replace
              targetLabel: job
              replacement: grafana
        additionalDataSources:
        - name: Loki
          type: loki
          url: http://loki-gateway.logging.svc.cluster.local
        sidecar:
          dashboards:
            searchNamespace: ALL
      kubelet:
        enabled: false
      kubeApiServer:
        enabled: false
      kubeControllerManager:
        enabled: false
      kubeScheduler:
        enabled: false
      kubeProxy:
        enabled: false
      kubeEtcd:
        enabled: false
      defaultRules:
        create: true
        rules:
          etcd: false
          k8s: false
          kubeApiserverAvailability: false
          kubeApiserverBurnrate: false
          kubeApiserverHistogram: false
          kubeApiserverSlos: false
          kubeControllerManager: false
          kubelet: false
          kubeProxy: false
          kubernetesApps: false
          kubernetesResources: false
          kubernetesStorage: false
          kubernetesSystem: false
          kubeScheduler: false

- name: Create strip prefix Middleware
  become: true
  kubernetes.core.k8s:
    state: present
    kubeconfig: /etc/rancher/k3s/k3s.yaml
    namespace: monitoring
    definition:
      apiVersion: traefik.containo.us/v1alpha1
      kind: Middleware
      metadata:
        name: stripprefix
        namespace: monitoring
      spec:
        stripPrefix:
          prefixes:
            - "/prometheus"
            - "/alertmanager"
            - "/grafana"
          forceSlash: false

- name: Create IngressRoute
  become: true
  kubernetes.core.k8s:
    state: present
    kubeconfig: /etc/rancher/k3s/k3s.yaml
    namespace: monitoring
    definition: |
      apiVersion: traefik.containo.us/v1alpha1
      kind: IngressRoute
      metadata:
        name: monitoring-https
        namespace: monitoring
        annotations:
          kubernetes.io/ingress.class: "{{ ingress_class }}"
          cert-manager.io/cluster-issuer: "{{ ingress_issuer }}"
      spec:
        entryPoints:
          - websecure
          - web
        routes:
          - kind: Rule
            match: Host(`{{ monitoring_host }}`) && PathPrefix(`/prometheus`)
            services:
              - name: kube-prometheus-stack-prometheus
                port: 9090
                namespace: monitoring
            middlewares:
              - name: stripprefix
                namespace: monitoring
          - kind: Rule
            match: Host(`{{ monitoring_host }}`) && PathPrefix(`/alertmanager`)
            services:
              - name: kube-prometheus-stack-alertmanager
                port: 9093
                namespace: monitoring
            middlewares:
              - name: stripprefix
                namespace: monitoring
          - kind: Rule
            match: Host(`{{ monitoring_host }}`) && PathPrefix(`/grafana`)
            services:
              - name: kube-prometheus-stack-grafana
                port: 80
                namespace: monitoring
            middlewares:
              - name: stripprefix
                namespace: monitoring
        tls:
          secretName: {{ monitoring_host }}-secret

- name: Create IngressRoute HTTPS redirection
  become: true
  kubernetes.core.k8s:
    state: present
    kubeconfig: /etc/rancher/k3s/k3s.yaml
    namespace: monitoring
    definition:
      apiVersion: traefik.containo.us/v1alpha1
      kind: IngressRoute
      metadata:
        name: monitoring-http
        namespace: monitoring
      spec:
        entryPoints:
          - web
        routes:
          - kind: Rule
            match: Host(`{{ monitoring_host }}`)
            priority: 1
            middlewares:
              - name: redirect-to-https
                namespace: traefik
            services:
              - kind: TraefikService
                name: noop@internal
