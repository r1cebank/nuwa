---
- name: Create random SQL user password
  ansible.builtin.set_fact:
    coder_sql_password: "{{ lookup('ansible.builtin.password', '/dev/null', length=30, chars=['ascii_letters', 'digits']) }}"

- name: Deploy PostgresSQL server
  ansible.builtin.include_role:
    name: install_mysql
  vars:
    db:
      deploy_name: coder-db
      db_name: coder
      namespace: coder
      username: coder
      password: "{{ coder_sql_password }}"
      storageClass: "{{ k3s_storage_class }}"
      size: "{{ coder_db_size }}"

- name: Create secret of sql connection url
  ansible.builtin.command:
    cmd: kubectl create secret generic coder-db-url -n coder --from-literal=url="postgres://coder:{{ coder_sql_password }}@coder-db-postgresql.coder.svc.cluster.local:5432/coder?sslmode=disable"
  register: output
  changed_when: output.rc != 0

- name: Add coder chart repo
  kubernetes.core.helm_repository:
    name: coder-v2
    repo_url: "{{ coder_chart_repo }}"

- name: Deploy coder chart to namespace
  become: true
  kubernetes.core.helm:
    name: coder
    release_namespace: coder
    chart_ref: coder-v2/coder
    create_namespace: true
    update_repo_cache: true
    kubeconfig: /etc/rancher/k3s/k3s.yaml
    wait: true
    values:
      coder:
        ingress:
          enable: true
          host: "{{ coder_host }}"
          annotations:
            traefik.ingress.kubernetes.io/router.middlewares: traefik-redirect-to-https@kubernetescrd
            kubernetes.io/ingress.class: "{{ ingress_class }}"
            cert-manager.io/cluster-issuer: "{{ ingress_issuer }}"
          tls:
            enable: true
            secretName: "{{ coder_host }}-tls"
        env:
          - name: CODER_PG_CONNECTION_URL
            valueFrom:
              secretKeyRef:
                name: coder-db-url
                key: url
          - name: CODER_ACCESS_URL
            value: "https://{{ coder_host }}"
